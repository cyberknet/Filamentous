// <auto-generated />
using System;
using Filamentous.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Filamentous.Migrations
{
    [DbContext(typeof(FilamentousDbContext))]
    [Migration("20240612050749_Add_Brand_Polymer_ProductLine")]
    partial class Add_Brand_Polymer_ProductLine
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Filamentous.Data.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99);

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(100);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(101);

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(105);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.Property<string>("ProductUrlTemplate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(10);

                    b.Property<string>("SpoolUrlTemplate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(11);

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(103);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-030000000002"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-030000000002"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Polymaker",
                            Url = "https://us.polymaker.com/"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-030000000001"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-030000000001"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Prusament",
                            Url = "https://prusa3d.com/"
                        });
                });

            modelBuilder.Entity("Filamentous.Data.Entities.Polymer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99);

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(100);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(101);

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(105);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Polymer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000001"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000001"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PLA"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000002"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000002"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PETG"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000003"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000003"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ASA"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000004"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000004"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ABS"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000005"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000005"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "TPU"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000006"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000006"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PC"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000007"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000007"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PVB"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000008"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000008"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CoPA"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000009"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000009"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PA6-CF"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-04000000000a"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-04000000000a"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PA6-GF"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-04000000000b"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-04000000000b"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PA12-CF"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-04000000000c"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-04000000000c"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PVA"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-04000000000d"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-04000000000d"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PCL"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-04000000000e"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-04000000000e"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PPS"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-04000000000f"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-04000000000f"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PS"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000010"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000010"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PSU"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000011"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000011"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PPSU"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000012"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000012"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PPA"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000013"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000013"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PEEK"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000014"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000014"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PEKK"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000015"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000015"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Other"
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-040000000016"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-040000000016"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PA11-CF"
                        });
                });

            modelBuilder.Entity("Filamentous.Data.Entities.ProductLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99);

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(100);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(101);

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(105);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PolymerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("PolymerId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("ProductLine");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000001"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000001"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000002"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000002"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite Silk PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000003"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000003"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite Dual Silk PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000004"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000004"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite Galaxy PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000005"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000005"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite Starlight PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000006"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000006"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite Luminous PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000007"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000007"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite Glow PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000008"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000008"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite Temperature Color Changing PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000009"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000009"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite UV Color Changing PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000000a"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000000a"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyTerra Matte PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000000b"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000000b"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyTerra Dual Matte PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000000c"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000000c"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyTerra Gradient Matte PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000000d"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000000d"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyTerra Dual Gradient Matte PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000000e"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000000e"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyTerra Marble PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000000f"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000000f"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyTerra Satin PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000010"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000010"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolySonic PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000011"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000011"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolySonic PLA Pro",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000012"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000012"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite PLA Pro",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000013"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000013"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite Metallic PLA Pro",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000014"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000014"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMax PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000015"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000015"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Seasonal Packs PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000016"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000016"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite CosPLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000017"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000017"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Light Weight PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000018"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000018"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Carbon Fiber PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000019"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000019"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyWood PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000001a"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000001a"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Draft PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000001b"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000001b"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Matte PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000001c"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000001c"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite ABS",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000004")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000001d"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000001d"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite Metallic ABS",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000004")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000001e"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000001e"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite Galaxy ABS",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000004")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000001f"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000001f"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite Neon ABS",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000004")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000020"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000020"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite ASA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000003")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000021"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000021"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite Galaxy ASA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000003")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000022"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000022"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite PETG",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000002")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000023"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000023"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite Translucent PETG",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000002")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000024"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000024"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMax PETG",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000002")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000025"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000025"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMax PETG-ESD",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000002")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000026"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000026"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMax TPU90",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000005")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000027"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000027"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMax TPU95",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000005")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000028"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000028"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMax TPU95-HF",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000005")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000029"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000029"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyLite PC",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000006")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000002a"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000002a"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMax PC",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000006")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000002b"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000002b"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMaxPC-FR",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000006")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000002c"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000002c"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMax PC-ABS",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000006")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000002d"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000002d"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMax PC-PBT",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000006")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000002e"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000002e"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMide CoPA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000008")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000002f"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000002f"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMide PA-6GF",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-04000000000a")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000030"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000030"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMide PA6-CF",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000009")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000031"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000031"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMide PA612-CF",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000009")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000032"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000032"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyMide PA12-CF",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-04000000000b")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000033"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000033"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolySmooth",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000007")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000034"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000034"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyCast",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-04000000000d")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000035"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000035"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolySupport for PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000015")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000036"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000036"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolySupport for PA12",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000015")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000037"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000037"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PolyDissolve",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-04000000000c")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000038"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000038"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Prusament PLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-050000000039"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-050000000039"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Prusament rPLA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000001")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000003a"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000003a"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Prusament PETG",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000002")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000003b"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000003b"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Prusament PC Blend",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000006")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000003c"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000003c"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Prusament PVB",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000007")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000003d"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000003d"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Prusament ASA",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000003")
                        },
                        new
                        {
                            Id = new Guid("d9a3f45c-81ae-4b86-b477-05000000003e"),
                            ConcurrencyStamp = new Guid("d9a3f45c-81ae-4b86-b477-05000000003e"),
                            CreatedById = "d9a3f45c-81ae-4b86-b477-020000000001",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Prusament PA11 Carbon Fiber",
                            PolymerId = new Guid("d9a3f45c-81ae-4b86-b477-040000000016")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "D9A3F45C-81AE-4B86-B477-010000000001",
                            ConcurrencyStamp = "D9A3F45C-81AE-4B86-B477-020000000001",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "D9A3F45C-81AE-4B86-B477-020000000001",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "D9A3F45C-81AE-4B86-B477-020000000001",
                            Email = "scott@blomfield.us",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "SCOTT@BLOMFIELD.US",
                            NormalizedUserName = "SCOTT@BLOMFIELD.US",
                            PasswordHash = "AQAAAAIAAYagAAAAEBm+qE3vZ4hlMjyrKVdyjEtTZqnU/1XXi/Sh2ycOqU8PkBxc8e5VLe//Lw/iO9dslw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "382c8396-2609-40f8-a4fc-7753e58d0ca1",
                            TwoFactorEnabled = false,
                            UserName = "scott@blomfield.us"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Filamentous.Data.Entities.Brand", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("Filamentous.Data.Entities.Polymer", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("Filamentous.Data.Entities.ProductLine", b =>
                {
                    b.HasOne("Filamentous.Data.Entities.Brand", null)
                        .WithMany("ProductLines")
                        .HasForeignKey("BrandId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Filamentous.Data.Entities.Polymer", "Polymer")
                        .WithMany()
                        .HasForeignKey("PolymerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Polymer");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Filamentous.Data.Entities.Brand", b =>
                {
                    b.Navigation("ProductLines");
                });
#pragma warning restore 612, 618
        }
    }
}
